{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>This website is intended to help current (and future students) of BCIT's COMP 3725 Intro To Data Communications for CST course. This is where I will be compiling my notes every week. There will be parallels with the lectures (duh),  but it's not a one-to-one copy and should not be considered as a replacement/alternative to other course, more like a supplement.</p>"},{"location":"#to-future-students-and-other-sets","title":"To future students and other sets","text":"<p>Since this is just a single summer session, course material may change, and I don't think I will be able to change it myself, so feel free to fork it or ask to be a contributor! You can contact me via GitHub or LinkedIn.</p>"},{"location":"#admonitions","title":"Admonitions","text":"<p>Note</p> <p>This is for auxiliary information, outside reference, or a related sidenote.</p> <p>Warning</p> <p>This admonition is for things that we should look out for, pitfalls or misconceptions.</p>"},{"location":"appendix/","title":"Appendix","text":"<p>Other background information and outside references can be found here.</p>"},{"location":"appendix/#hamming-error-correction","title":"Hamming Error Correction","text":"<p>See this 3Blue1Brown's video on Hamming Codes to understand the motivation behind error codes. </p> <p>[ADD STUFF HERE]</p>"},{"location":"appendix/#hamming-distance","title":"Hamming Distance","text":"<p>In a nutshell, the hamming distance can be programmatically written like so:</p> <pre><code>/**\n * Calculates the distance between Arrays s1 and s2.\n * @param s1 an array of T\n * @param s2 another array of T\n * @returns the number of differing elements.\n *          if s1 and s2 have different lengths, -1.\n */\nfunction hammingDistance&lt;T&gt;(s1: Array&lt;T&gt;, s2: Array&lt;T&gt;): number {\n    // guard case\n    if (s1.length != s2.length) {\n        return -1;\n    }\n    let  count: number = 0; // set accumulator\n    for (let i: number = 0; i &lt; s1.length; ++i) {\n        count += Number(s1[i] != s2[i]); // cast to number\n    }\n    return count;\n}\n</code></pre>"},{"location":"appendix/#math","title":"Math","text":""},{"location":"appendix/#trigonometry","title":"Trigonometry","text":""},{"location":"appendix/#logarithms","title":"Logarithms","text":""},{"location":"logistics/","title":"Course Logistics","text":"name percent final 35 labs/quizzes 35 assignments 30 total 100 <p>Passing Grade</p> <p>The passing grade for this course is 60%.</p>"}]}